// Generated by CoffeeScript 1.8.0

/*
HeatColor, by Josh Nathanson
A plugin for jQuery
See copyright at end of file
Complete documentation at http://www.jnathanson.com/blog/client/jquery/heatcolor/index.cfm
 */
jQuery.fn.heatcolor = function(valueFunction, options) {
  var helpers, settings, temp;
  settings = {
    elementFunction: function() {
      return jQuery(this);
    },
    minval: 0,
    maxval: 0,
    lightness: 0.75,
    colorStyle: 'roygbiv',
    reverseOrder: false
  };
  if (options) {
    jQuery.extend(settings, options);
  }
  helpers = {
    findcolor: function(curval, mn, mx) {
      var b, g, period, position, r, scale, shft, x;
      position = (curval - mn) / (mx - mn);
      shft = settings.colorStyle === 'roygbiv' ? 0.5 * position + 1.7 * (1 - position) : position + 0.2 + 5.5 * (1 - position);
      scale = 96;
      period = 2 * Math.PI;
      x = shft + position * period;
      x = settings.colorStyle !== 'roygbiv' ? -x : x;
      r = this.process(Math.floor((Math.cos(x) + 1) * scale));
      g = this.process(Math.floor((Math.cos(x + Math.PI / 2) + 1) * scale));
      b = this.process(Math.floor((Math.cos(x + Math.PI) + 1) * scale));
      return "#" + r + g + b;
    },
    process: function(num) {
      var n, s;
      n = Math.floor(num + settings.lightness * (256 - num));
      s = n.toString(16);
      if (s.length === 1) {
        return '0' + s;
      } else {
        return s;
      }
    },
    setMaxAndMin: function(els) {
      var vals;
      vals = [];
      els.each(function() {
        vals.push(valueFunction.apply(jQuery(this)));
      });
      vals = vals.sort(function(a, b) {
        return a - b;
      });
      settings.maxval = !settings.reverseOrder ? vals[vals.length - 1] : vals[0];
      settings.minval = !settings.reverseOrder ? vals[0] : vals[vals.length - 1];
    }
  };
  if (!settings.minval && !settings.maxval) {
    helpers.setMaxAndMin(jQuery(this));
  } else if (settings.reverseOrder) {
    temp = settings.minval;
    settings.minval = settings.maxval;
    settings.maxval = temp;
  }
  jQuery(this).each(function() {
    var curcolor, curval, el, elToColor;
    el = jQuery(this);
    curval = valueFunction.apply(el);
    curcolor = helpers.findcolor(curval, settings.minval, settings.maxval);
    elToColor = settings.elementFunction.apply(el);
    if (elToColor[0].nodeType === 1) {
      elToColor.addClass('widget-formatter');
      return elToColor.css('background-color', curcolor);
    } else if (elToColor[0].nodeType === 3) {
      return elToColor.css('color', curcolor);
    }
  });
  return this;
};
